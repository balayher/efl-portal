// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: players.sql

package database

import (
	"context"
)

const createPlayer = `-- name: CreatePlayer :one
INSERT INTO players (
    created_at, 
    updated_at, 
    user_id, 
    archetype_id,
    team_id,
    first_name,
    last_name,
    strength,
    agility,
    arm,
    intelligence,
    accuracy,
    tackling,
    speed,
    hands,
    pass_blocking,
    run_blocking,
    kick_distance,
    kick_accuracy,
    endurance,
    height,
    weight,
    jersey,
    total_tpe,
    applied_tpe,
    regressed_tpe,
    active_status,
    contract_years,
    contract_salary,
    money,
    equipment_1,
    equipment_2,
    equipment_3
    )
VALUES (
    NOW(),
    NOW(),
    $1,
    $2,
    $3,
    $4,
    $5,
    $6,
    $7,
    $8,
    $9,
    $10,
    $11,
    $12,
    $13,
    $14,
    $15,
    $16,
    $17,
    $18,
    $19,
    $20,
    $21,
    $22,
    $23,
    0,
    "active",
    0,
    0,
    0,
    "none",
    "none",
    "none"
)
RETURNING id, created_at, updated_at, user_id, archetype_id, team_id, first_name, last_name, strength, agility, arm, intelligence, accuracy, tackling, speed, hands, pass_blocking, run_blocking, kick_distance, kick_accuracy, endurance, height, weight, jersey, total_tpe, applied_tpe, regressed_tpe, active_status, contract_years, contract_salary, money, equipment_1, equipment_2, equipment_3
`

type CreatePlayerParams struct {
	UserID       int32
	ArchetypeID  int32
	TeamID       int32
	FirstName    string
	LastName     string
	Strength     int32
	Agility      int32
	Arm          int32
	Intelligence int32
	Accuracy     int32
	Tackling     int32
	Speed        int32
	Hands        int32
	PassBlocking int32
	RunBlocking  int32
	KickDistance int32
	KickAccuracy int32
	Endurance    int32
	Height       int32
	Weight       int32
	Jersey       int32
	TotalTpe     int32
	AppliedTpe   int32
}

func (q *Queries) CreatePlayer(ctx context.Context, arg CreatePlayerParams) (Player, error) {
	row := q.db.QueryRowContext(ctx, createPlayer,
		arg.UserID,
		arg.ArchetypeID,
		arg.TeamID,
		arg.FirstName,
		arg.LastName,
		arg.Strength,
		arg.Agility,
		arg.Arm,
		arg.Intelligence,
		arg.Accuracy,
		arg.Tackling,
		arg.Speed,
		arg.Hands,
		arg.PassBlocking,
		arg.RunBlocking,
		arg.KickDistance,
		arg.KickAccuracy,
		arg.Endurance,
		arg.Height,
		arg.Weight,
		arg.Jersey,
		arg.TotalTpe,
		arg.AppliedTpe,
	)
	var i Player
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.UserID,
		&i.ArchetypeID,
		&i.TeamID,
		&i.FirstName,
		&i.LastName,
		&i.Strength,
		&i.Agility,
		&i.Arm,
		&i.Intelligence,
		&i.Accuracy,
		&i.Tackling,
		&i.Speed,
		&i.Hands,
		&i.PassBlocking,
		&i.RunBlocking,
		&i.KickDistance,
		&i.KickAccuracy,
		&i.Endurance,
		&i.Height,
		&i.Weight,
		&i.Jersey,
		&i.TotalTpe,
		&i.AppliedTpe,
		&i.RegressedTpe,
		&i.ActiveStatus,
		&i.ContractYears,
		&i.ContractSalary,
		&i.Money,
		&i.Equipment1,
		&i.Equipment2,
		&i.Equipment3,
	)
	return i, err
}
